using System;

namespace SGE.GL {
	public partial class OpenGL {
	
		#region GL1.0
		public delegate void GLAPIglCullFace (int mode);
		public delegate void GLAPIglFrontFace (int mode);
		public delegate void GLAPIglHint (int target, int mode);
		public delegate void GLAPIglLineWidth (float width);
		public delegate void GLAPIglPointSize (float size);
		public delegate void GLAPIglPolygonMode (int face, int mode);
		public delegate void GLAPIglScissor (int x, int y, int width, int height);
		public delegate void GLAPIglTexParameterf (int target, int pname, float param);
		public unsafe delegate void GLAPIglTexParameterfv (int target, int pname, float* _params);
		public delegate void GLAPIglTexParameteri (int target, int pname, int param);
		public unsafe delegate void GLAPIglTexParameteriv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglTexImage1D (int target, int level, int internalformat, int width, int border, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglTexImage2D (int target, int level, int internalformat, int width, int height, int border, int format, int type, void* pixels);
		public delegate void GLAPIglDrawBuffer (int buf);
		public delegate void GLAPIglClear (int mask);
		public delegate void GLAPIglClearColor (float red, float green, float blue, float alpha);
		public delegate void GLAPIglClearStencil (int s);
		public delegate void GLAPIglClearDepth (double depth);
		public delegate void GLAPIglStencilMask (int mask);
		public delegate void GLAPIglColorMask (byte red, byte green, byte blue, byte alpha);
		public delegate void GLAPIglDepthMask (byte flag);
		public delegate void GLAPIglDisable (int cap);
		public delegate void GLAPIglEnable (int cap);
		public delegate void GLAPIglFinish ();
		public delegate void GLAPIglFlush ();
		public delegate void GLAPIglBlendFunc (int sfactor, int dfactor);
		public delegate void GLAPIglLogicOp (int opcode);
		public delegate void GLAPIglStencilFunc (int func, int _ref, int mask);
		public delegate void GLAPIglStencilOp (int fail, int zfail, int zpass);
		public delegate void GLAPIglDepthFunc (int func);
		public delegate void GLAPIglPixelStoref (int pname, float param);
		public delegate void GLAPIglPixelStorei (int pname, int param);
		public delegate void GLAPIglReadBuffer (int src);
		public unsafe delegate void GLAPIglReadPixels (int x, int y, int width, int height, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglGetBooleanv (int pname, byte* data);
		public unsafe delegate void GLAPIglGetDoublev (int pname, double* data);
		public delegate int GLAPIglGetError ();
		public unsafe delegate void GLAPIglGetFloatv (int pname, float* data);
		public unsafe delegate void GLAPIglGetIntegerv (int pname, int* data);
		public unsafe delegate byte* GLAPIglGetString (int name);
		public unsafe delegate void GLAPIglGetTexImage (int target, int level, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglGetTexParameterfv (int target, int pname, float* _params);
		public unsafe delegate void GLAPIglGetTexParameteriv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglGetTexLevelParameterfv (int target, int level, int pname, float* _params);
		public unsafe delegate void GLAPIglGetTexLevelParameteriv (int target, int level, int pname, int* _params);
		public delegate byte GLAPIglIsEnabled (int cap);
		public delegate void GLAPIglDepthRange (double n, double f);
		public delegate void GLAPIglViewport (int x, int y, int width, int height);
		public delegate void GLAPIglNewList (int list, int mode);
		public delegate void GLAPIglEndList ();
		public delegate void GLAPIglCallList (int list);
		public unsafe delegate void GLAPIglCallLists (int n, int type, void* lists);
		public delegate void GLAPIglDeleteLists (int list, int range);
		public delegate int GLAPIglGenLists (int range);
		public delegate void GLAPIglListBase (int _base);
		public delegate void GLAPIglBegin (int mode);
		public unsafe delegate void GLAPIglBitmap (int width, int height, float xorig, float yorig, float xmove, float ymove, byte* bitmap);
		public delegate void GLAPIglColor3b (sbyte red, sbyte green, sbyte blue);
		public unsafe delegate void GLAPIglColor3bv (sbyte* v);
		public delegate void GLAPIglColor3d (double red, double green, double blue);
		public unsafe delegate void GLAPIglColor3dv (double* v);
		public delegate void GLAPIglColor3f (float red, float green, float blue);
		public unsafe delegate void GLAPIglColor3fv (float* v);
		public delegate void GLAPIglColor3i (int red, int green, int blue);
		public unsafe delegate void GLAPIglColor3iv (int* v);
		public delegate void GLAPIglColor3s (short red, short green, short blue);
		public unsafe delegate void GLAPIglColor3sv (short* v);
		public delegate void GLAPIglColor3ub (byte red, byte green, byte blue);
		public unsafe delegate void GLAPIglColor3ubv (byte* v);
		public delegate void GLAPIglColor3ui (int red, int green, int blue);
		public unsafe delegate void GLAPIglColor3uiv (int* v);
		public delegate void GLAPIglColor3us (ushort red, ushort green, ushort blue);
		public unsafe delegate void GLAPIglColor3usv (ushort* v);
		public delegate void GLAPIglColor4b (sbyte red, sbyte green, sbyte blue, sbyte alpha);
		public unsafe delegate void GLAPIglColor4bv (sbyte* v);
		public delegate void GLAPIglColor4d (double red, double green, double blue, double alpha);
		public unsafe delegate void GLAPIglColor4dv (double* v);
		public delegate void GLAPIglColor4f (float red, float green, float blue, float alpha);
		public unsafe delegate void GLAPIglColor4fv (float* v);
		public delegate void GLAPIglColor4i (int red, int green, int blue, int alpha);
		public unsafe delegate void GLAPIglColor4iv (int* v);
		public delegate void GLAPIglColor4s (short red, short green, short blue, short alpha);
		public unsafe delegate void GLAPIglColor4sv (short* v);
		public delegate void GLAPIglColor4ub (byte red, byte green, byte blue, byte alpha);
		public unsafe delegate void GLAPIglColor4ubv (byte* v);
		public delegate void GLAPIglColor4ui (int red, int green, int blue, int alpha);
		public unsafe delegate void GLAPIglColor4uiv (int* v);
		public delegate void GLAPIglColor4us (ushort red, ushort green, ushort blue, ushort alpha);
		public unsafe delegate void GLAPIglColor4usv (ushort* v);
		public delegate void GLAPIglEdgeFlag (byte flag);
		public unsafe delegate void GLAPIglEdgeFlagv (byte* flag);
		public delegate void GLAPIglEnd ();
		public delegate void GLAPIglIndexd (double c);
		public unsafe delegate void GLAPIglIndexdv (double* c);
		public delegate void GLAPIglIndexf (float c);
		public unsafe delegate void GLAPIglIndexfv (float* c);
		public delegate void GLAPIglIndexi (int c);
		public unsafe delegate void GLAPIglIndexiv (int* c);
		public delegate void GLAPIglIndexs (short c);
		public unsafe delegate void GLAPIglIndexsv (short* c);
		public delegate void GLAPIglNormal3b (sbyte nx, sbyte ny, sbyte nz);
		public unsafe delegate void GLAPIglNormal3bv (sbyte* v);
		public delegate void GLAPIglNormal3d (double nx, double ny, double nz);
		public unsafe delegate void GLAPIglNormal3dv (double* v);
		public delegate void GLAPIglNormal3f (float nx, float ny, float nz);
		public unsafe delegate void GLAPIglNormal3fv (float* v);
		public delegate void GLAPIglNormal3i (int nx, int ny, int nz);
		public unsafe delegate void GLAPIglNormal3iv (int* v);
		public delegate void GLAPIglNormal3s (short nx, short ny, short nz);
		public unsafe delegate void GLAPIglNormal3sv (short* v);
		public delegate void GLAPIglRasterPos2d (double x, double y);
		public unsafe delegate void GLAPIglRasterPos2dv (double* v);
		public delegate void GLAPIglRasterPos2f (float x, float y);
		public unsafe delegate void GLAPIglRasterPos2fv (float* v);
		public delegate void GLAPIglRasterPos2i (int x, int y);
		public unsafe delegate void GLAPIglRasterPos2iv (int* v);
		public delegate void GLAPIglRasterPos2s (short x, short y);
		public unsafe delegate void GLAPIglRasterPos2sv (short* v);
		public delegate void GLAPIglRasterPos3d (double x, double y, double z);
		public unsafe delegate void GLAPIglRasterPos3dv (double* v);
		public delegate void GLAPIglRasterPos3f (float x, float y, float z);
		public unsafe delegate void GLAPIglRasterPos3fv (float* v);
		public delegate void GLAPIglRasterPos3i (int x, int y, int z);
		public unsafe delegate void GLAPIglRasterPos3iv (int* v);
		public delegate void GLAPIglRasterPos3s (short x, short y, short z);
		public unsafe delegate void GLAPIglRasterPos3sv (short* v);
		public delegate void GLAPIglRasterPos4d (double x, double y, double z, double w);
		public unsafe delegate void GLAPIglRasterPos4dv (double* v);
		public delegate void GLAPIglRasterPos4f (float x, float y, float z, float w);
		public unsafe delegate void GLAPIglRasterPos4fv (float* v);
		public delegate void GLAPIglRasterPos4i (int x, int y, int z, int w);
		public unsafe delegate void GLAPIglRasterPos4iv (int* v);
		public delegate void GLAPIglRasterPos4s (short x, short y, short z, short w);
		public unsafe delegate void GLAPIglRasterPos4sv (short* v);
		public delegate void GLAPIglRectd (double x1, double y1, double x2, double y2);
		public unsafe delegate void GLAPIglRectdv (double* v1, double* v2);
		public delegate void GLAPIglRectf (float x1, float y1, float x2, float y2);
		public unsafe delegate void GLAPIglRectfv (float* v1, float* v2);
		public delegate void GLAPIglRecti (int x1, int y1, int x2, int y2);
		public unsafe delegate void GLAPIglRectiv (int* v1, int* v2);
		public delegate void GLAPIglRects (short x1, short y1, short x2, short y2);
		public unsafe delegate void GLAPIglRectsv (short* v1, short* v2);
		public delegate void GLAPIglTexCoord1d (double s);
		public unsafe delegate void GLAPIglTexCoord1dv (double* v);
		public delegate void GLAPIglTexCoord1f (float s);
		public unsafe delegate void GLAPIglTexCoord1fv (float* v);
		public delegate void GLAPIglTexCoord1i (int s);
		public unsafe delegate void GLAPIglTexCoord1iv (int* v);
		public delegate void GLAPIglTexCoord1s (short s);
		public unsafe delegate void GLAPIglTexCoord1sv (short* v);
		public delegate void GLAPIglTexCoord2d (double s, double t);
		public unsafe delegate void GLAPIglTexCoord2dv (double* v);
		public delegate void GLAPIglTexCoord2f (float s, float t);
		public unsafe delegate void GLAPIglTexCoord2fv (float* v);
		public delegate void GLAPIglTexCoord2i (int s, int t);
		public unsafe delegate void GLAPIglTexCoord2iv (int* v);
		public delegate void GLAPIglTexCoord2s (short s, short t);
		public unsafe delegate void GLAPIglTexCoord2sv (short* v);
		public delegate void GLAPIglTexCoord3d (double s, double t, double r);
		public unsafe delegate void GLAPIglTexCoord3dv (double* v);
		public delegate void GLAPIglTexCoord3f (float s, float t, float r);
		public unsafe delegate void GLAPIglTexCoord3fv (float* v);
		public delegate void GLAPIglTexCoord3i (int s, int t, int r);
		public unsafe delegate void GLAPIglTexCoord3iv (int* v);
		public delegate void GLAPIglTexCoord3s (short s, short t, short r);
		public unsafe delegate void GLAPIglTexCoord3sv (short* v);
		public delegate void GLAPIglTexCoord4d (double s, double t, double r, double q);
		public unsafe delegate void GLAPIglTexCoord4dv (double* v);
		public delegate void GLAPIglTexCoord4f (float s, float t, float r, float q);
		public unsafe delegate void GLAPIglTexCoord4fv (float* v);
		public delegate void GLAPIglTexCoord4i (int s, int t, int r, int q);
		public unsafe delegate void GLAPIglTexCoord4iv (int* v);
		public delegate void GLAPIglTexCoord4s (short s, short t, short r, short q);
		public unsafe delegate void GLAPIglTexCoord4sv (short* v);
		public delegate void GLAPIglVertex2d (double x, double y);
		public unsafe delegate void GLAPIglVertex2dv (double* v);
		public delegate void GLAPIglVertex2f (float x, float y);
		public unsafe delegate void GLAPIglVertex2fv (float* v);
		public delegate void GLAPIglVertex2i (int x, int y);
		public unsafe delegate void GLAPIglVertex2iv (int* v);
		public delegate void GLAPIglVertex2s (short x, short y);
		public unsafe delegate void GLAPIglVertex2sv (short* v);
		public delegate void GLAPIglVertex3d (double x, double y, double z);
		public unsafe delegate void GLAPIglVertex3dv (double* v);
		public delegate void GLAPIglVertex3f (float x, float y, float z);
		public unsafe delegate void GLAPIglVertex3fv (float* v);
		public delegate void GLAPIglVertex3i (int x, int y, int z);
		public unsafe delegate void GLAPIglVertex3iv (int* v);
		public delegate void GLAPIglVertex3s (short x, short y, short z);
		public unsafe delegate void GLAPIglVertex3sv (short* v);
		public delegate void GLAPIglVertex4d (double x, double y, double z, double w);
		public unsafe delegate void GLAPIglVertex4dv (double* v);
		public delegate void GLAPIglVertex4f (float x, float y, float z, float w);
		public unsafe delegate void GLAPIglVertex4fv (float* v);
		public delegate void GLAPIglVertex4i (int x, int y, int z, int w);
		public unsafe delegate void GLAPIglVertex4iv (int* v);
		public delegate void GLAPIglVertex4s (short x, short y, short z, short w);
		public unsafe delegate void GLAPIglVertex4sv (short* v);
		public unsafe delegate void GLAPIglClipPlane (int plane, double* equation);
		public delegate void GLAPIglColorMaterial (int face, int mode);
		public delegate void GLAPIglFogf (int pname, float param);
		public unsafe delegate void GLAPIglFogfv (int pname, float* _params);
		public delegate void GLAPIglFogi (int pname, int param);
		public unsafe delegate void GLAPIglFogiv (int pname, int* _params);
		public delegate void GLAPIglLightf (int light, int pname, float param);
		public unsafe delegate void GLAPIglLightfv (int light, int pname, float* _params);
		public delegate void GLAPIglLighti (int light, int pname, int param);
		public unsafe delegate void GLAPIglLightiv (int light, int pname, int* _params);
		public delegate void GLAPIglLightModelf (int pname, float param);
		public unsafe delegate void GLAPIglLightModelfv (int pname, float* _params);
		public delegate void GLAPIglLightModeli (int pname, int param);
		public unsafe delegate void GLAPIglLightModeliv (int pname, int* _params);
		public delegate void GLAPIglLineStipple (int factor, ushort pattern);
		public delegate void GLAPIglMaterialf (int face, int pname, float param);
		public unsafe delegate void GLAPIglMaterialfv (int face, int pname, float* _params);
		public delegate void GLAPIglMateriali (int face, int pname, int param);
		public unsafe delegate void GLAPIglMaterialiv (int face, int pname, int* _params);
		public unsafe delegate void GLAPIglPolygonStipple (byte* mask);
		public delegate void GLAPIglShadeModel (int mode);
		public delegate void GLAPIglTexEnvf (int target, int pname, float param);
		public unsafe delegate void GLAPIglTexEnvfv (int target, int pname, float* _params);
		public delegate void GLAPIglTexEnvi (int target, int pname, int param);
		public unsafe delegate void GLAPIglTexEnviv (int target, int pname, int* _params);
		public delegate void GLAPIglTexGend (int coord, int pname, double param);
		public unsafe delegate void GLAPIglTexGendv (int coord, int pname, double* _params);
		public delegate void GLAPIglTexGenf (int coord, int pname, float param);
		public unsafe delegate void GLAPIglTexGenfv (int coord, int pname, float* _params);
		public delegate void GLAPIglTexGeni (int coord, int pname, int param);
		public unsafe delegate void GLAPIglTexGeniv (int coord, int pname, int* _params);
		public unsafe delegate void GLAPIglFeedbackBuffer (int size, int type, float* buffer);
		public unsafe delegate void GLAPIglSelectBuffer (int size, int* buffer);
		public delegate int GLAPIglRenderMode (int mode);
		public delegate void GLAPIglInitNames ();
		public delegate void GLAPIglLoadName (int name);
		public delegate void GLAPIglPassThrough (float token);
		public delegate void GLAPIglPopName ();
		public delegate void GLAPIglPushName (int name);
		public delegate void GLAPIglClearAccum (float red, float green, float blue, float alpha);
		public delegate void GLAPIglClearIndex (float c);
		public delegate void GLAPIglIndexMask (int mask);
		public delegate void GLAPIglAccum (int op, float value);
		public delegate void GLAPIglPopAttrib ();
		public delegate void GLAPIglPushAttrib (int mask);
		public unsafe delegate void GLAPIglMap1d (int target, double u1, double u2, int stride, int order, double* points);
		public unsafe delegate void GLAPIglMap1f (int target, float u1, float u2, int stride, int order, float* points);
		public unsafe delegate void GLAPIglMap2d (int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double* points);
		public unsafe delegate void GLAPIglMap2f (int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float* points);
		public delegate void GLAPIglMapGrid1d (int un, double u1, double u2);
		public delegate void GLAPIglMapGrid1f (int un, float u1, float u2);
		public delegate void GLAPIglMapGrid2d (int un, double u1, double u2, int vn, double v1, double v2);
		public delegate void GLAPIglMapGrid2f (int un, float u1, float u2, int vn, float v1, float v2);
		public delegate void GLAPIglEvalCoord1d (double u);
		public unsafe delegate void GLAPIglEvalCoord1dv (double* u);
		public delegate void GLAPIglEvalCoord1f (float u);
		public unsafe delegate void GLAPIglEvalCoord1fv (float* u);
		public delegate void GLAPIglEvalCoord2d (double u, double v);
		public unsafe delegate void GLAPIglEvalCoord2dv (double* u);
		public delegate void GLAPIglEvalCoord2f (float u, float v);
		public unsafe delegate void GLAPIglEvalCoord2fv (float* u);
		public delegate void GLAPIglEvalMesh1 (int mode, int i1, int i2);
		public delegate void GLAPIglEvalPoint1 (int i);
		public delegate void GLAPIglEvalMesh2 (int mode, int i1, int i2, int j1, int j2);
		public delegate void GLAPIglEvalPoint2 (int i, int j);
		public delegate void GLAPIglAlphaFunc (int func, float _ref);
		public delegate void GLAPIglPixelZoom (float xfactor, float yfactor);
		public delegate void GLAPIglPixelTransferf (int pname, float param);
		public delegate void GLAPIglPixelTransferi (int pname, int param);
		public unsafe delegate void GLAPIglPixelMapfv (int map, int mapsize, float* values);
		public unsafe delegate void GLAPIglPixelMapuiv (int map, int mapsize, int* values);
		public unsafe delegate void GLAPIglPixelMapusv (int map, int mapsize, ushort* values);
		public delegate void GLAPIglCopyPixels (int x, int y, int width, int height, int type);
		public unsafe delegate void GLAPIglDrawPixels (int width, int height, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglGetClipPlane (int plane, double* equation);
		public unsafe delegate void GLAPIglGetLightfv (int light, int pname, float* _params);
		public unsafe delegate void GLAPIglGetLightiv (int light, int pname, int* _params);
		public unsafe delegate void GLAPIglGetMapdv (int target, int query, double* v);
		public unsafe delegate void GLAPIglGetMapfv (int target, int query, float* v);
		public unsafe delegate void GLAPIglGetMapiv (int target, int query, int* v);
		public unsafe delegate void GLAPIglGetMaterialfv (int face, int pname, float* _params);
		public unsafe delegate void GLAPIglGetMaterialiv (int face, int pname, int* _params);
		public unsafe delegate void GLAPIglGetPixelMapfv (int map, float* values);
		public unsafe delegate void GLAPIglGetPixelMapuiv (int map, int* values);
		public unsafe delegate void GLAPIglGetPixelMapusv (int map, ushort* values);
		public unsafe delegate void GLAPIglGetPolygonStipple (byte* mask);
		public unsafe delegate void GLAPIglGetTexEnvfv (int target, int pname, float* _params);
		public unsafe delegate void GLAPIglGetTexEnviv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglGetTexGendv (int coord, int pname, double* _params);
		public unsafe delegate void GLAPIglGetTexGenfv (int coord, int pname, float* _params);
		public unsafe delegate void GLAPIglGetTexGeniv (int coord, int pname, int* _params);
		public delegate byte GLAPIglIsList (int list);
		public delegate void GLAPIglFrustum (double left, double right, double bottom, double top, double zNear, double zFar);
		public delegate void GLAPIglLoadIdentity ();
		public unsafe delegate void GLAPIglLoadMatrixf (float* m);
		public unsafe delegate void GLAPIglLoadMatrixd (double* m);
		public delegate void GLAPIglMatrixMode (int mode);
		public unsafe delegate void GLAPIglMultMatrixf (float* m);
		public unsafe delegate void GLAPIglMultMatrixd (double* m);
		public delegate void GLAPIglOrtho (double left, double right, double bottom, double top, double zNear, double zFar);
		public delegate void GLAPIglPopMatrix ();
		public delegate void GLAPIglPushMatrix ();
		public delegate void GLAPIglRotated (double angle, double x, double y, double z);
		public delegate void GLAPIglRotatef (float angle, float x, float y, float z);
		public delegate void GLAPIglScaled (double x, double y, double z);
		public delegate void GLAPIglScalef (float x, float y, float z);
		public delegate void GLAPIglTranslated (double x, double y, double z);
		public delegate void GLAPIglTranslatef (float x, float y, float z);
		#endregion // GL1.0
		
		#region GL1.1
		public delegate void GLAPIglDrawArrays (int mode, int first, int count);
		public unsafe delegate void GLAPIglDrawElements (int mode, int count, int type, void* indices);
		public unsafe delegate void GLAPIglGetPointerv (int pname, void** _params);
		public delegate void GLAPIglPolygonOffset (float factor, float units);
		public delegate void GLAPIglCopyTexImage1D (int target, int level, int internalformat, int x, int y, int width, int border);
		public delegate void GLAPIglCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border);
		public delegate void GLAPIglCopyTexSubImage1D (int target, int level, int xoffset, int x, int y, int width);
		public delegate void GLAPIglCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		public unsafe delegate void GLAPIglTexSubImage1D (int target, int level, int xoffset, int width, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, void* pixels);
		public delegate void GLAPIglBindTexture (int target, int texture);
		public unsafe delegate void GLAPIglDeleteTextures (int n, int* textures);
		public unsafe delegate void GLAPIglGenTextures (int n, int* textures);
		public delegate byte GLAPIglIsTexture (int texture);
		public delegate void GLAPIglArrayElement (int i);
		public unsafe delegate void GLAPIglColorPointer (int size, int type, int stride, void* pointer);
		public delegate void GLAPIglDisableClientState (int array);
		public unsafe delegate void GLAPIglEdgeFlagPointer (int stride, void* pointer);
		public delegate void GLAPIglEnableClientState (int array);
		public unsafe delegate void GLAPIglIndexPointer (int type, int stride, void* pointer);
		public unsafe delegate void GLAPIglInterleavedArrays (int format, int stride, void* pointer);
		public unsafe delegate void GLAPIglNormalPointer (int type, int stride, void* pointer);
		public unsafe delegate void GLAPIglTexCoordPointer (int size, int type, int stride, void* pointer);
		public unsafe delegate void GLAPIglVertexPointer (int size, int type, int stride, void* pointer);
		public unsafe delegate byte GLAPIglAreTexturesResident (int n, int* textures, byte* residences);
		public unsafe delegate void GLAPIglPrioritizeTextures (int n, int* textures, float* priorities);
		public delegate void GLAPIglIndexub (byte c);
		public unsafe delegate void GLAPIglIndexubv (byte* c);
		public delegate void GLAPIglPopClientAttrib ();
		public delegate void GLAPIglPushClientAttrib (int mask);
		#endregion // GL1.1
		
		#region GL1.2
		public unsafe delegate void GLAPIglDrawRangeElements (int mode, int start, int end, int count, int type, void* indices);
		public unsafe delegate void GLAPIglTexImage3D (int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, void* pixels);
		public delegate void GLAPIglCopyTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		#endregion // GL1.2
		
		#region GL1.3
		public delegate void GLAPIglActiveTexture (int texture);
		public delegate void GLAPIglSampleCoverage (float value, byte invert);
		public unsafe delegate void GLAPIglCompressedTexImage3D (int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, void* data);
		public unsafe delegate void GLAPIglCompressedTexImage2D (int target, int level, int internalformat, int width, int height, int border, int imageSize, void* data);
		public unsafe delegate void GLAPIglCompressedTexImage1D (int target, int level, int internalformat, int width, int border, int imageSize, void* data);
		public unsafe delegate void GLAPIglCompressedTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, void* data);
		public unsafe delegate void GLAPIglCompressedTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, void* data);
		public unsafe delegate void GLAPIglCompressedTexSubImage1D (int target, int level, int xoffset, int width, int format, int imageSize, void* data);
		public unsafe delegate void GLAPIglGetCompressedTexImage (int target, int level, void* img);
		public delegate void GLAPIglClientActiveTexture (int texture);
		public delegate void GLAPIglMultiTexCoord1d (int target, double s);
		public unsafe delegate void GLAPIglMultiTexCoord1dv (int target, double* v);
		public delegate void GLAPIglMultiTexCoord1f (int target, float s);
		public unsafe delegate void GLAPIglMultiTexCoord1fv (int target, float* v);
		public delegate void GLAPIglMultiTexCoord1i (int target, int s);
		public unsafe delegate void GLAPIglMultiTexCoord1iv (int target, int* v);
		public delegate void GLAPIglMultiTexCoord1s (int target, short s);
		public unsafe delegate void GLAPIglMultiTexCoord1sv (int target, short* v);
		public delegate void GLAPIglMultiTexCoord2d (int target, double s, double t);
		public unsafe delegate void GLAPIglMultiTexCoord2dv (int target, double* v);
		public delegate void GLAPIglMultiTexCoord2f (int target, float s, float t);
		public unsafe delegate void GLAPIglMultiTexCoord2fv (int target, float* v);
		public delegate void GLAPIglMultiTexCoord2i (int target, int s, int t);
		public unsafe delegate void GLAPIglMultiTexCoord2iv (int target, int* v);
		public delegate void GLAPIglMultiTexCoord2s (int target, short s, short t);
		public unsafe delegate void GLAPIglMultiTexCoord2sv (int target, short* v);
		public delegate void GLAPIglMultiTexCoord3d (int target, double s, double t, double r);
		public unsafe delegate void GLAPIglMultiTexCoord3dv (int target, double* v);
		public delegate void GLAPIglMultiTexCoord3f (int target, float s, float t, float r);
		public unsafe delegate void GLAPIglMultiTexCoord3fv (int target, float* v);
		public delegate void GLAPIglMultiTexCoord3i (int target, int s, int t, int r);
		public unsafe delegate void GLAPIglMultiTexCoord3iv (int target, int* v);
		public delegate void GLAPIglMultiTexCoord3s (int target, short s, short t, short r);
		public unsafe delegate void GLAPIglMultiTexCoord3sv (int target, short* v);
		public delegate void GLAPIglMultiTexCoord4d (int target, double s, double t, double r, double q);
		public unsafe delegate void GLAPIglMultiTexCoord4dv (int target, double* v);
		public delegate void GLAPIglMultiTexCoord4f (int target, float s, float t, float r, float q);
		public unsafe delegate void GLAPIglMultiTexCoord4fv (int target, float* v);
		public delegate void GLAPIglMultiTexCoord4i (int target, int s, int t, int r, int q);
		public unsafe delegate void GLAPIglMultiTexCoord4iv (int target, int* v);
		public delegate void GLAPIglMultiTexCoord4s (int target, short s, short t, short r, short q);
		public unsafe delegate void GLAPIglMultiTexCoord4sv (int target, short* v);
		public unsafe delegate void GLAPIglLoadTransposeMatrixf (float* m);
		public unsafe delegate void GLAPIglLoadTransposeMatrixd (double* m);
		public unsafe delegate void GLAPIglMultTransposeMatrixf (float* m);
		public unsafe delegate void GLAPIglMultTransposeMatrixd (double* m);
		#endregion // GL1.3
		
		#region GL1.4
		public delegate void GLAPIglBlendFuncSeparate (int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);
		public unsafe delegate void GLAPIglMultiDrawArrays (int mode, int* first, int* count, int drawcount);
		public unsafe delegate void GLAPIglMultiDrawElements (int mode, int* count, int type, void** indices, int drawcount);
		public delegate void GLAPIglPointParameterf (int pname, float param);
		public unsafe delegate void GLAPIglPointParameterfv (int pname, float* _params);
		public delegate void GLAPIglPointParameteri (int pname, int param);
		public unsafe delegate void GLAPIglPointParameteriv (int pname, int* _params);
		public delegate void GLAPIglFogCoordf (float coord);
		public unsafe delegate void GLAPIglFogCoordfv (float* coord);
		public delegate void GLAPIglFogCoordd (double coord);
		public unsafe delegate void GLAPIglFogCoorddv (double* coord);
		public unsafe delegate void GLAPIglFogCoordPointer (int type, int stride, void* pointer);
		public delegate void GLAPIglSecondaryColor3b (sbyte red, sbyte green, sbyte blue);
		public unsafe delegate void GLAPIglSecondaryColor3bv (sbyte* v);
		public delegate void GLAPIglSecondaryColor3d (double red, double green, double blue);
		public unsafe delegate void GLAPIglSecondaryColor3dv (double* v);
		public delegate void GLAPIglSecondaryColor3f (float red, float green, float blue);
		public unsafe delegate void GLAPIglSecondaryColor3fv (float* v);
		public delegate void GLAPIglSecondaryColor3i (int red, int green, int blue);
		public unsafe delegate void GLAPIglSecondaryColor3iv (int* v);
		public delegate void GLAPIglSecondaryColor3s (short red, short green, short blue);
		public unsafe delegate void GLAPIglSecondaryColor3sv (short* v);
		public delegate void GLAPIglSecondaryColor3ub (byte red, byte green, byte blue);
		public unsafe delegate void GLAPIglSecondaryColor3ubv (byte* v);
		public delegate void GLAPIglSecondaryColor3ui (int red, int green, int blue);
		public unsafe delegate void GLAPIglSecondaryColor3uiv (int* v);
		public delegate void GLAPIglSecondaryColor3us (ushort red, ushort green, ushort blue);
		public unsafe delegate void GLAPIglSecondaryColor3usv (ushort* v);
		public unsafe delegate void GLAPIglSecondaryColorPointer (int size, int type, int stride, void* pointer);
		public delegate void GLAPIglWindowPos2d (double x, double y);
		public unsafe delegate void GLAPIglWindowPos2dv (double* v);
		public delegate void GLAPIglWindowPos2f (float x, float y);
		public unsafe delegate void GLAPIglWindowPos2fv (float* v);
		public delegate void GLAPIglWindowPos2i (int x, int y);
		public unsafe delegate void GLAPIglWindowPos2iv (int* v);
		public delegate void GLAPIglWindowPos2s (short x, short y);
		public unsafe delegate void GLAPIglWindowPos2sv (short* v);
		public delegate void GLAPIglWindowPos3d (double x, double y, double z);
		public unsafe delegate void GLAPIglWindowPos3dv (double* v);
		public delegate void GLAPIglWindowPos3f (float x, float y, float z);
		public unsafe delegate void GLAPIglWindowPos3fv (float* v);
		public delegate void GLAPIglWindowPos3i (int x, int y, int z);
		public unsafe delegate void GLAPIglWindowPos3iv (int* v);
		public delegate void GLAPIglWindowPos3s (short x, short y, short z);
		public unsafe delegate void GLAPIglWindowPos3sv (short* v);
		public delegate void GLAPIglBlendColor (float red, float green, float blue, float alpha);
		public delegate void GLAPIglBlendEquation (int mode);
		#endregion // GL1.4
		
		#region GL1.5
		public unsafe delegate void GLAPIglGenQueries (int n, int* ids);
		public unsafe delegate void GLAPIglDeleteQueries (int n, int* ids);
		public delegate byte GLAPIglIsQuery (int id);
		public delegate void GLAPIglBeginQuery (int target, int id);
		public delegate void GLAPIglEndQuery (int target);
		public unsafe delegate void GLAPIglGetQueryiv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglGetQueryObjectiv (int id, int pname, int* _params);
		public unsafe delegate void GLAPIglGetQueryObjectuiv (int id, int pname, int* _params);
		public delegate void GLAPIglBindBuffer (int target, int buffer);
		public unsafe delegate void GLAPIglDeleteBuffers (int n, int* buffers);
		public unsafe delegate void GLAPIglGenBuffers (int n, int* buffers);
		public delegate byte GLAPIglIsBuffer (int buffer);
		public unsafe delegate void GLAPIglBufferData (int target, IntPtr size, void* data, int usage);
		public unsafe delegate void GLAPIglBufferSubData (int target, IntPtr offset, IntPtr size, void* data);
		public unsafe delegate void GLAPIglGetBufferSubData (int target, IntPtr offset, IntPtr size, void* data);
		public unsafe delegate void* GLAPIglMapBuffer (int target, int access);
		public delegate byte GLAPIglUnmapBuffer (int target);
		public unsafe delegate void GLAPIglGetBufferParameteriv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglGetBufferPointerv (int target, int pname, void** _params);
		#endregion // GL1.5
		
		#region GL2.0
		public delegate void GLAPIglBlendEquationSeparate (int modeRGB, int modeAlpha);
		public unsafe delegate void GLAPIglDrawBuffers (int n, int* bufs);
		public delegate void GLAPIglStencilOpSeparate (int face, int sfail, int dpfail, int dppass);
		public delegate void GLAPIglStencilFuncSeparate (int face, int func, int _ref, int mask);
		public delegate void GLAPIglStencilMaskSeparate (int face, int mask);
		public delegate void GLAPIglAttachShader (int program, int shader);
		public unsafe delegate void GLAPIglBindAttribLocation (int program, int index, byte* name);
		public delegate void GLAPIglCompileShader (int shader);
		public delegate int GLAPIglCreateProgram ();
		public delegate int GLAPIglCreateShader (int type);
		public delegate void GLAPIglDeleteProgram (int program);
		public delegate void GLAPIglDeleteShader (int shader);
		public delegate void GLAPIglDetachShader (int program, int shader);
		public delegate void GLAPIglDisableVertexAttribArray (int index);
		public delegate void GLAPIglEnableVertexAttribArray (int index);
		public unsafe delegate void GLAPIglGetActiveAttrib (int program, int index, int bufSize, int* length, int* size, int* type, byte* name);
		public unsafe delegate void GLAPIglGetActiveUniform (int program, int index, int bufSize, int* length, int* size, int* type, byte* name);
		public unsafe delegate void GLAPIglGetAttachedShaders (int program, int maxCount, int* count, int* shaders);
		public unsafe delegate int GLAPIglGetAttribLocation (int program, byte* name);
		public unsafe delegate void GLAPIglGetProgramiv (int program, int pname, int* _params);
		public unsafe delegate void GLAPIglGetProgramInfoLog (int program, int bufSize, int* length, byte* infoLog);
		public unsafe delegate void GLAPIglGetShaderiv (int shader, int pname, int* _params);
		public unsafe delegate void GLAPIglGetShaderInfoLog (int shader, int bufSize, int* length, byte* infoLog);
		public unsafe delegate void GLAPIglGetShaderSource (int shader, int bufSize, int* length, byte* source);
		public unsafe delegate int GLAPIglGetUniformLocation (int program, byte* name);
		public unsafe delegate void GLAPIglGetUniformfv (int program, int location, float* _params);
		public unsafe delegate void GLAPIglGetUniformiv (int program, int location, int* _params);
		public unsafe delegate void GLAPIglGetVertexAttribdv (int index, int pname, double* _params);
		public unsafe delegate void GLAPIglGetVertexAttribfv (int index, int pname, float* _params);
		public unsafe delegate void GLAPIglGetVertexAttribiv (int index, int pname, int* _params);
		public unsafe delegate void GLAPIglGetVertexAttribPointerv (int index, int pname, void** pointer);
		public delegate byte GLAPIglIsProgram (int program);
		public delegate byte GLAPIglIsShader (int shader);
		public delegate void GLAPIglLinkProgram (int program);
		public unsafe delegate void GLAPIglShaderSource (int shader, int count, byte** _string, int* length);
		public delegate void GLAPIglUseProgram (int program);
		public delegate void GLAPIglUniform1f (int location, float v0);
		public delegate void GLAPIglUniform2f (int location, float v0, float v1);
		public delegate void GLAPIglUniform3f (int location, float v0, float v1, float v2);
		public delegate void GLAPIglUniform4f (int location, float v0, float v1, float v2, float v3);
		public delegate void GLAPIglUniform1i (int location, int v0);
		public delegate void GLAPIglUniform2i (int location, int v0, int v1);
		public delegate void GLAPIglUniform3i (int location, int v0, int v1, int v2);
		public delegate void GLAPIglUniform4i (int location, int v0, int v1, int v2, int v3);
		public unsafe delegate void GLAPIglUniform1fv (int location, int count, float* value);
		public unsafe delegate void GLAPIglUniform2fv (int location, int count, float* value);
		public unsafe delegate void GLAPIglUniform3fv (int location, int count, float* value);
		public unsafe delegate void GLAPIglUniform4fv (int location, int count, float* value);
		public unsafe delegate void GLAPIglUniform1iv (int location, int count, int* value);
		public unsafe delegate void GLAPIglUniform2iv (int location, int count, int* value);
		public unsafe delegate void GLAPIglUniform3iv (int location, int count, int* value);
		public unsafe delegate void GLAPIglUniform4iv (int location, int count, int* value);
		public unsafe delegate void GLAPIglUniformMatrix2fv (int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglUniformMatrix3fv (int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglUniformMatrix4fv (int location, int count, byte transpose, float* value);
		public delegate void GLAPIglValidateProgram (int program);
		public delegate void GLAPIglVertexAttrib1d (int index, double x);
		public unsafe delegate void GLAPIglVertexAttrib1dv (int index, double* v);
		public delegate void GLAPIglVertexAttrib1f (int index, float x);
		public unsafe delegate void GLAPIglVertexAttrib1fv (int index, float* v);
		public delegate void GLAPIglVertexAttrib1s (int index, short x);
		public unsafe delegate void GLAPIglVertexAttrib1sv (int index, short* v);
		public delegate void GLAPIglVertexAttrib2d (int index, double x, double y);
		public unsafe delegate void GLAPIglVertexAttrib2dv (int index, double* v);
		public delegate void GLAPIglVertexAttrib2f (int index, float x, float y);
		public unsafe delegate void GLAPIglVertexAttrib2fv (int index, float* v);
		public delegate void GLAPIglVertexAttrib2s (int index, short x, short y);
		public unsafe delegate void GLAPIglVertexAttrib2sv (int index, short* v);
		public delegate void GLAPIglVertexAttrib3d (int index, double x, double y, double z);
		public unsafe delegate void GLAPIglVertexAttrib3dv (int index, double* v);
		public delegate void GLAPIglVertexAttrib3f (int index, float x, float y, float z);
		public unsafe delegate void GLAPIglVertexAttrib3fv (int index, float* v);
		public delegate void GLAPIglVertexAttrib3s (int index, short x, short y, short z);
		public unsafe delegate void GLAPIglVertexAttrib3sv (int index, short* v);
		public unsafe delegate void GLAPIglVertexAttrib4Nbv (int index, sbyte* v);
		public unsafe delegate void GLAPIglVertexAttrib4Niv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttrib4Nsv (int index, short* v);
		public delegate void GLAPIglVertexAttrib4Nub (int index, byte x, byte y, byte z, byte w);
		public unsafe delegate void GLAPIglVertexAttrib4Nubv (int index, byte* v);
		public unsafe delegate void GLAPIglVertexAttrib4Nuiv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttrib4Nusv (int index, ushort* v);
		public unsafe delegate void GLAPIglVertexAttrib4bv (int index, sbyte* v);
		public delegate void GLAPIglVertexAttrib4d (int index, double x, double y, double z, double w);
		public unsafe delegate void GLAPIglVertexAttrib4dv (int index, double* v);
		public delegate void GLAPIglVertexAttrib4f (int index, float x, float y, float z, float w);
		public unsafe delegate void GLAPIglVertexAttrib4fv (int index, float* v);
		public unsafe delegate void GLAPIglVertexAttrib4iv (int index, int* v);
		public delegate void GLAPIglVertexAttrib4s (int index, short x, short y, short z, short w);
		public unsafe delegate void GLAPIglVertexAttrib4sv (int index, short* v);
		public unsafe delegate void GLAPIglVertexAttrib4ubv (int index, byte* v);
		public unsafe delegate void GLAPIglVertexAttrib4uiv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttrib4usv (int index, ushort* v);
		public unsafe delegate void GLAPIglVertexAttribPointer (int index, int size, int type, byte normalized, int stride, void* pointer);
		#endregion // GL2.0
		
		#region GL2.1
		public unsafe delegate void GLAPIglUniformMatrix2x3fv (int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglUniformMatrix3x2fv (int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglUniformMatrix2x4fv (int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglUniformMatrix4x2fv (int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglUniformMatrix3x4fv (int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglUniformMatrix4x3fv (int location, int count, byte transpose, float* value);
		#endregion // GL2.1
		
		#region GL3.0
		public delegate void GLAPIglColorMaski (int index, byte r, byte g, byte b, byte a);
		public unsafe delegate void GLAPIglGetBooleani_v (int target, int index, byte* data);
		public unsafe delegate void GLAPIglGetIntegeri_v (int target, int index, int* data);
		public delegate void GLAPIglEnablei (int target, int index);
		public delegate void GLAPIglDisablei (int target, int index);
		public delegate byte GLAPIglIsEnabledi (int target, int index);
		public delegate void GLAPIglBeginTransformFeedback (int primitiveMode);
		public delegate void GLAPIglEndTransformFeedback ();
		public delegate void GLAPIglBindBufferRange (int target, int index, int buffer, IntPtr offset, IntPtr size);
		public delegate void GLAPIglBindBufferBase (int target, int index, int buffer);
		public unsafe delegate void GLAPIglTransformFeedbackVaryings (int program, int count, byte** varyings, int bufferMode);
		public unsafe delegate void GLAPIglGetTransformFeedbackVarying (int program, int index, int bufSize, int* length, int* size, int* type, byte* name);
		public delegate void GLAPIglClampColor (int target, int clamp);
		public delegate void GLAPIglBeginConditionalRender (int id, int mode);
		public delegate void GLAPIglEndConditionalRender ();
		public unsafe delegate void GLAPIglVertexAttribIPointer (int index, int size, int type, int stride, void* pointer);
		public unsafe delegate void GLAPIglGetVertexAttribIiv (int index, int pname, int* _params);
		public unsafe delegate void GLAPIglGetVertexAttribIuiv (int index, int pname, int* _params);
		public delegate void GLAPIglVertexAttribI1i (int index, int x);
		public delegate void GLAPIglVertexAttribI2i (int index, int x, int y);
		public delegate void GLAPIglVertexAttribI3i (int index, int x, int y, int z);
		public delegate void GLAPIglVertexAttribI4i (int index, int x, int y, int z, int w);
		public delegate void GLAPIglVertexAttribI1ui (int index, int x);
		public delegate void GLAPIglVertexAttribI2ui (int index, int x, int y);
		public delegate void GLAPIglVertexAttribI3ui (int index, int x, int y, int z);
		public delegate void GLAPIglVertexAttribI4ui (int index, int x, int y, int z, int w);
		public unsafe delegate void GLAPIglVertexAttribI1iv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI2iv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI3iv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI4iv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI1uiv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI2uiv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI3uiv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI4uiv (int index, int* v);
		public unsafe delegate void GLAPIglVertexAttribI4bv (int index, sbyte* v);
		public unsafe delegate void GLAPIglVertexAttribI4sv (int index, short* v);
		public unsafe delegate void GLAPIglVertexAttribI4ubv (int index, byte* v);
		public unsafe delegate void GLAPIglVertexAttribI4usv (int index, ushort* v);
		public unsafe delegate void GLAPIglGetUniformuiv (int program, int location, int* _params);
		public unsafe delegate void GLAPIglBindFragDataLocation (int program, int color, byte* name);
		public unsafe delegate int GLAPIglGetFragDataLocation (int program, byte* name);
		public delegate void GLAPIglUniform1ui (int location, int v0);
		public delegate void GLAPIglUniform2ui (int location, int v0, int v1);
		public delegate void GLAPIglUniform3ui (int location, int v0, int v1, int v2);
		public delegate void GLAPIglUniform4ui (int location, int v0, int v1, int v2, int v3);
		public unsafe delegate void GLAPIglUniform1uiv (int location, int count, int* value);
		public unsafe delegate void GLAPIglUniform2uiv (int location, int count, int* value);
		public unsafe delegate void GLAPIglUniform3uiv (int location, int count, int* value);
		public unsafe delegate void GLAPIglUniform4uiv (int location, int count, int* value);
		public unsafe delegate void GLAPIglTexParameterIiv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglTexParameterIuiv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglGetTexParameterIiv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglGetTexParameterIuiv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglClearBufferiv (int buffer, int drawbuffer, int* value);
		public unsafe delegate void GLAPIglClearBufferuiv (int buffer, int drawbuffer, int* value);
		public unsafe delegate void GLAPIglClearBufferfv (int buffer, int drawbuffer, float* value);
		public delegate void GLAPIglClearBufferfi (int buffer, int drawbuffer, float depth, int stencil);
		public unsafe delegate byte* GLAPIglGetStringi (int name, int index);
		public delegate byte GLAPIglIsRenderbuffer (int renderbuffer);
		public delegate void GLAPIglBindRenderbuffer (int target, int renderbuffer);
		public unsafe delegate void GLAPIglDeleteRenderbuffers (int n, int* renderbuffers);
		public unsafe delegate void GLAPIglGenRenderbuffers (int n, int* renderbuffers);
		public delegate void GLAPIglRenderbufferStorage (int target, int internalformat, int width, int height);
		public unsafe delegate void GLAPIglGetRenderbufferParameteriv (int target, int pname, int* _params);
		public delegate byte GLAPIglIsFramebuffer (int framebuffer);
		public delegate void GLAPIglBindFramebuffer (int target, int framebuffer);
		public unsafe delegate void GLAPIglDeleteFramebuffers (int n, int* framebuffers);
		public unsafe delegate void GLAPIglGenFramebuffers (int n, int* framebuffers);
		public delegate int GLAPIglCheckFramebufferStatus (int target);
		public delegate void GLAPIglFramebufferTexture1D (int target, int attachment, int textarget, int texture, int level);
		public delegate void GLAPIglFramebufferTexture2D (int target, int attachment, int textarget, int texture, int level);
		public delegate void GLAPIglFramebufferTexture3D (int target, int attachment, int textarget, int texture, int level, int zoffset);
		public delegate void GLAPIglFramebufferRenderbuffer (int target, int attachment, int renderbuffertarget, int renderbuffer);
		public unsafe delegate void GLAPIglGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, int* _params);
		public delegate void GLAPIglGenerateMipmap (int target);
		public delegate void GLAPIglBlitFramebuffer (int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
		public delegate void GLAPIglRenderbufferStorageMultisample (int target, int samples, int internalformat, int width, int height);
		public delegate void GLAPIglFramebufferTextureLayer (int target, int attachment, int texture, int level, int layer);
		public unsafe delegate void* GLAPIglMapBufferRange (int target, IntPtr offset, IntPtr length, int access);
		public delegate void GLAPIglFlushMappedBufferRange (int target, IntPtr offset, IntPtr length);
		public delegate void GLAPIglBindVertexArray (int array);
		public unsafe delegate void GLAPIglDeleteVertexArrays (int n, int* arrays);
		public unsafe delegate void GLAPIglGenVertexArrays (int n, int* arrays);
		public delegate byte GLAPIglIsVertexArray (int array);
		#endregion // GL3.0
		
		#region GL3.1
		public delegate void GLAPIglDrawArraysInstanced (int mode, int first, int count, int instancecount);
		public unsafe delegate void GLAPIglDrawElementsInstanced (int mode, int count, int type, void* indices, int instancecount);
		public delegate void GLAPIglTexBuffer (int target, int internalformat, int buffer);
		public delegate void GLAPIglPrimitiveRestartIndex (int index);
		public delegate void GLAPIglCopyBufferSubData (int readTarget, int writeTarget, IntPtr readOffset, IntPtr writeOffset, IntPtr size);
		public unsafe delegate void GLAPIglGetUniformIndices (int program, int uniformCount, byte** uniformNames, int* uniformIndices);
		public unsafe delegate void GLAPIglGetActiveUniformsiv (int program, int uniformCount, int* uniformIndices, int pname, int* _params);
		public unsafe delegate void GLAPIglGetActiveUniformName (int program, int uniformIndex, int bufSize, int* length, byte* uniformName);
		public unsafe delegate int GLAPIglGetUniformBlockIndex (int program, byte* uniformBlockName);
		public unsafe delegate void GLAPIglGetActiveUniformBlockiv (int program, int uniformBlockIndex, int pname, int* _params);
		public unsafe delegate void GLAPIglGetActiveUniformBlockName (int program, int uniformBlockIndex, int bufSize, int* length, byte* uniformBlockName);
		public delegate void GLAPIglUniformBlockBinding (int program, int uniformBlockIndex, int uniformBlockBinding);
		#endregion // GL3.1
		
		#region GL3.2
		public unsafe delegate void GLAPIglDrawElementsBaseVertex (int mode, int count, int type, void* indices, int basevertex);
		public unsafe delegate void GLAPIglDrawRangeElementsBaseVertex (int mode, int start, int end, int count, int type, void* indices, int basevertex);
		public unsafe delegate void GLAPIglDrawElementsInstancedBaseVertex (int mode, int count, int type, void* indices, int instancecount, int basevertex);
		public unsafe delegate void GLAPIglMultiDrawElementsBaseVertex (int mode, int* count, int type, void** indices, int drawcount, int* basevertex);
		public delegate void GLAPIglProvokingVertex (int mode);
		public delegate IntPtr GLAPIglFenceSync (int condition, int flags);
		public delegate byte GLAPIglIsSync (IntPtr sync);
		public delegate void GLAPIglDeleteSync (IntPtr sync);
		public delegate int GLAPIglClientWaitSync (IntPtr sync, int flags, ulong timeout);
		public delegate void GLAPIglWaitSync (IntPtr sync, int flags, ulong timeout);
		public unsafe delegate void GLAPIglGetInteger64v (int pname, long* data);
		public unsafe delegate void GLAPIglGetSynciv (IntPtr sync, int pname, int count, int* length, int* values);
		public unsafe delegate void GLAPIglGetInteger64i_v (int target, int index, long* data);
		public unsafe delegate void GLAPIglGetBufferParameteri64v (int target, int pname, long* _params);
		public delegate void GLAPIglFramebufferTexture (int target, int attachment, int texture, int level);
		public delegate void GLAPIglTexImage2DMultisample (int target, int samples, int internalformat, int width, int height, byte fixedsamplelocations);
		public delegate void GLAPIglTexImage3DMultisample (int target, int samples, int internalformat, int width, int height, int depth, byte fixedsamplelocations);
		public unsafe delegate void GLAPIglGetMultisamplefv (int pname, int index, float* val);
		public delegate void GLAPIglSampleMaski (int maskNumber, int mask);
		#endregion // GL3.2
		
		#region GL3.3
		public unsafe delegate void GLAPIglBindFragDataLocationIndexed (int program, int colorNumber, int index, byte* name);
		public unsafe delegate int GLAPIglGetFragDataIndex (int program, byte* name);
		public unsafe delegate void GLAPIglGenSamplers (int count, int* samplers);
		public unsafe delegate void GLAPIglDeleteSamplers (int count, int* samplers);
		public delegate byte GLAPIglIsSampler (int sampler);
		public delegate void GLAPIglBindSampler (int unit, int sampler);
		public delegate void GLAPIglSamplerParameteri (int sampler, int pname, int param);
		public unsafe delegate void GLAPIglSamplerParameteriv (int sampler, int pname, int* param);
		public delegate void GLAPIglSamplerParameterf (int sampler, int pname, float param);
		public unsafe delegate void GLAPIglSamplerParameterfv (int sampler, int pname, float* param);
		public unsafe delegate void GLAPIglSamplerParameterIiv (int sampler, int pname, int* param);
		public unsafe delegate void GLAPIglSamplerParameterIuiv (int sampler, int pname, int* param);
		public unsafe delegate void GLAPIglGetSamplerParameteriv (int sampler, int pname, int* _params);
		public unsafe delegate void GLAPIglGetSamplerParameterIiv (int sampler, int pname, int* _params);
		public unsafe delegate void GLAPIglGetSamplerParameterfv (int sampler, int pname, float* _params);
		public unsafe delegate void GLAPIglGetSamplerParameterIuiv (int sampler, int pname, int* _params);
		public delegate void GLAPIglQueryCounter (int id, int target);
		public unsafe delegate void GLAPIglGetQueryObjecti64v (int id, int pname, long* _params);
		public unsafe delegate void GLAPIglGetQueryObjectui64v (int id, int pname, ulong* _params);
		public delegate void GLAPIglVertexAttribDivisor (int index, int divisor);
		public delegate void GLAPIglVertexAttribP1ui (int index, int type, byte normalized, int value);
		public unsafe delegate void GLAPIglVertexAttribP1uiv (int index, int type, byte normalized, int* value);
		public delegate void GLAPIglVertexAttribP2ui (int index, int type, byte normalized, int value);
		public unsafe delegate void GLAPIglVertexAttribP2uiv (int index, int type, byte normalized, int* value);
		public delegate void GLAPIglVertexAttribP3ui (int index, int type, byte normalized, int value);
		public unsafe delegate void GLAPIglVertexAttribP3uiv (int index, int type, byte normalized, int* value);
		public delegate void GLAPIglVertexAttribP4ui (int index, int type, byte normalized, int value);
		public unsafe delegate void GLAPIglVertexAttribP4uiv (int index, int type, byte normalized, int* value);
		public delegate void GLAPIglVertexP2ui (int type, int value);
		public unsafe delegate void GLAPIglVertexP2uiv (int type, int* value);
		public delegate void GLAPIglVertexP3ui (int type, int value);
		public unsafe delegate void GLAPIglVertexP3uiv (int type, int* value);
		public delegate void GLAPIglVertexP4ui (int type, int value);
		public unsafe delegate void GLAPIglVertexP4uiv (int type, int* value);
		public delegate void GLAPIglTexCoordP1ui (int type, int coords);
		public unsafe delegate void GLAPIglTexCoordP1uiv (int type, int* coords);
		public delegate void GLAPIglTexCoordP2ui (int type, int coords);
		public unsafe delegate void GLAPIglTexCoordP2uiv (int type, int* coords);
		public delegate void GLAPIglTexCoordP3ui (int type, int coords);
		public unsafe delegate void GLAPIglTexCoordP3uiv (int type, int* coords);
		public delegate void GLAPIglTexCoordP4ui (int type, int coords);
		public unsafe delegate void GLAPIglTexCoordP4uiv (int type, int* coords);
		public delegate void GLAPIglMultiTexCoordP1ui (int texture, int type, int coords);
		public unsafe delegate void GLAPIglMultiTexCoordP1uiv (int texture, int type, int* coords);
		public delegate void GLAPIglMultiTexCoordP2ui (int texture, int type, int coords);
		public unsafe delegate void GLAPIglMultiTexCoordP2uiv (int texture, int type, int* coords);
		public delegate void GLAPIglMultiTexCoordP3ui (int texture, int type, int coords);
		public unsafe delegate void GLAPIglMultiTexCoordP3uiv (int texture, int type, int* coords);
		public delegate void GLAPIglMultiTexCoordP4ui (int texture, int type, int coords);
		public unsafe delegate void GLAPIglMultiTexCoordP4uiv (int texture, int type, int* coords);
		public delegate void GLAPIglNormalP3ui (int type, int coords);
		public unsafe delegate void GLAPIglNormalP3uiv (int type, int* coords);
		public delegate void GLAPIglColorP3ui (int type, int color);
		public unsafe delegate void GLAPIglColorP3uiv (int type, int* color);
		public delegate void GLAPIglColorP4ui (int type, int color);
		public unsafe delegate void GLAPIglColorP4uiv (int type, int* color);
		public delegate void GLAPIglSecondaryColorP3ui (int type, int color);
		public unsafe delegate void GLAPIglSecondaryColorP3uiv (int type, int* color);
		#endregion // GL3.3
		
		#region GL4.0
		public delegate void GLAPIglMinSampleShading (float value);
		public delegate void GLAPIglBlendEquationi (int buf, int mode);
		public delegate void GLAPIglBlendEquationSeparatei (int buf, int modeRGB, int modeAlpha);
		public delegate void GLAPIglBlendFunci (int buf, int src, int dst);
		public delegate void GLAPIglBlendFuncSeparatei (int buf, int srcRGB, int dstRGB, int srcAlpha, int dstAlpha);
		public unsafe delegate void GLAPIglDrawArraysIndirect (int mode, void* indirect);
		public unsafe delegate void GLAPIglDrawElementsIndirect (int mode, int type, void* indirect);
		public delegate void GLAPIglUniform1d (int location, double x);
		public delegate void GLAPIglUniform2d (int location, double x, double y);
		public delegate void GLAPIglUniform3d (int location, double x, double y, double z);
		public delegate void GLAPIglUniform4d (int location, double x, double y, double z, double w);
		public unsafe delegate void GLAPIglUniform1dv (int location, int count, double* value);
		public unsafe delegate void GLAPIglUniform2dv (int location, int count, double* value);
		public unsafe delegate void GLAPIglUniform3dv (int location, int count, double* value);
		public unsafe delegate void GLAPIglUniform4dv (int location, int count, double* value);
		public unsafe delegate void GLAPIglUniformMatrix2dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix3dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix4dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix2x3dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix2x4dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix3x2dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix3x4dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix4x2dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglUniformMatrix4x3dv (int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglGetUniformdv (int program, int location, double* _params);
		public unsafe delegate int GLAPIglGetSubroutineUniformLocation (int program, int shadertype, byte* name);
		public unsafe delegate int GLAPIglGetSubroutineIndex (int program, int shadertype, byte* name);
		public unsafe delegate void GLAPIglGetActiveSubroutineUniformiv (int program, int shadertype, int index, int pname, int* values);
		public unsafe delegate void GLAPIglGetActiveSubroutineUniformName (int program, int shadertype, int index, int bufSize, int* length, byte* name);
		public unsafe delegate void GLAPIglGetActiveSubroutineName (int program, int shadertype, int index, int bufSize, int* length, byte* name);
		public unsafe delegate void GLAPIglUniformSubroutinesuiv (int shadertype, int count, int* indices);
		public unsafe delegate void GLAPIglGetUniformSubroutineuiv (int shadertype, int location, int* _params);
		public unsafe delegate void GLAPIglGetProgramStageiv (int program, int shadertype, int pname, int* values);
		public delegate void GLAPIglPatchParameteri (int pname, int value);
		public unsafe delegate void GLAPIglPatchParameterfv (int pname, float* values);
		public delegate void GLAPIglBindTransformFeedback (int target, int id);
		public unsafe delegate void GLAPIglDeleteTransformFeedbacks (int n, int* ids);
		public unsafe delegate void GLAPIglGenTransformFeedbacks (int n, int* ids);
		public delegate byte GLAPIglIsTransformFeedback (int id);
		public delegate void GLAPIglPauseTransformFeedback ();
		public delegate void GLAPIglResumeTransformFeedback ();
		public delegate void GLAPIglDrawTransformFeedback (int mode, int id);
		public delegate void GLAPIglDrawTransformFeedbackStream (int mode, int id, int stream);
		public delegate void GLAPIglBeginQueryIndexed (int target, int index, int id);
		public delegate void GLAPIglEndQueryIndexed (int target, int index);
		public unsafe delegate void GLAPIglGetQueryIndexediv (int target, int index, int pname, int* _params);
		#endregion // GL4.0
		
		#region GL4.1
		public delegate void GLAPIglReleaseShaderCompiler ();
		public unsafe delegate void GLAPIglShaderBinary (int count, int* shaders, int binaryFormat, void* binary, int length);
		public unsafe delegate void GLAPIglGetShaderPrecisionFormat (int shadertype, int precisiontype, int* range, int* precision);
		public delegate void GLAPIglDepthRangef (float n, float f);
		public delegate void GLAPIglClearDepthf (float d);
		public unsafe delegate void GLAPIglGetProgramBinary (int program, int bufSize, int* length, int* binaryFormat, void* binary);
		public unsafe delegate void GLAPIglProgramBinary (int program, int binaryFormat, void* binary, int length);
		public delegate void GLAPIglProgramParameteri (int program, int pname, int value);
		public delegate void GLAPIglUseProgramStages (int pipeline, int stages, int program);
		public delegate void GLAPIglActiveShaderProgram (int pipeline, int program);
		public unsafe delegate int GLAPIglCreateShaderProgramv (int type, int count, byte** strings);
		public delegate void GLAPIglBindProgramPipeline (int pipeline);
		public unsafe delegate void GLAPIglDeleteProgramPipelines (int n, int* pipelines);
		public unsafe delegate void GLAPIglGenProgramPipelines (int n, int* pipelines);
		public delegate byte GLAPIglIsProgramPipeline (int pipeline);
		public unsafe delegate void GLAPIglGetProgramPipelineiv (int pipeline, int pname, int* _params);
		public delegate void GLAPIglProgramUniform1i (int program, int location, int v0);
		public unsafe delegate void GLAPIglProgramUniform1iv (int program, int location, int count, int* value);
		public delegate void GLAPIglProgramUniform1f (int program, int location, float v0);
		public unsafe delegate void GLAPIglProgramUniform1fv (int program, int location, int count, float* value);
		public delegate void GLAPIglProgramUniform1d (int program, int location, double v0);
		public unsafe delegate void GLAPIglProgramUniform1dv (int program, int location, int count, double* value);
		public delegate void GLAPIglProgramUniform1ui (int program, int location, int v0);
		public unsafe delegate void GLAPIglProgramUniform1uiv (int program, int location, int count, int* value);
		public delegate void GLAPIglProgramUniform2i (int program, int location, int v0, int v1);
		public unsafe delegate void GLAPIglProgramUniform2iv (int program, int location, int count, int* value);
		public delegate void GLAPIglProgramUniform2f (int program, int location, float v0, float v1);
		public unsafe delegate void GLAPIglProgramUniform2fv (int program, int location, int count, float* value);
		public delegate void GLAPIglProgramUniform2d (int program, int location, double v0, double v1);
		public unsafe delegate void GLAPIglProgramUniform2dv (int program, int location, int count, double* value);
		public delegate void GLAPIglProgramUniform2ui (int program, int location, int v0, int v1);
		public unsafe delegate void GLAPIglProgramUniform2uiv (int program, int location, int count, int* value);
		public delegate void GLAPIglProgramUniform3i (int program, int location, int v0, int v1, int v2);
		public unsafe delegate void GLAPIglProgramUniform3iv (int program, int location, int count, int* value);
		public delegate void GLAPIglProgramUniform3f (int program, int location, float v0, float v1, float v2);
		public unsafe delegate void GLAPIglProgramUniform3fv (int program, int location, int count, float* value);
		public delegate void GLAPIglProgramUniform3d (int program, int location, double v0, double v1, double v2);
		public unsafe delegate void GLAPIglProgramUniform3dv (int program, int location, int count, double* value);
		public delegate void GLAPIglProgramUniform3ui (int program, int location, int v0, int v1, int v2);
		public unsafe delegate void GLAPIglProgramUniform3uiv (int program, int location, int count, int* value);
		public delegate void GLAPIglProgramUniform4i (int program, int location, int v0, int v1, int v2, int v3);
		public unsafe delegate void GLAPIglProgramUniform4iv (int program, int location, int count, int* value);
		public delegate void GLAPIglProgramUniform4f (int program, int location, float v0, float v1, float v2, float v3);
		public unsafe delegate void GLAPIglProgramUniform4fv (int program, int location, int count, float* value);
		public delegate void GLAPIglProgramUniform4d (int program, int location, double v0, double v1, double v2, double v3);
		public unsafe delegate void GLAPIglProgramUniform4dv (int program, int location, int count, double* value);
		public delegate void GLAPIglProgramUniform4ui (int program, int location, int v0, int v1, int v2, int v3);
		public unsafe delegate void GLAPIglProgramUniform4uiv (int program, int location, int count, int* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix2fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix3fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix4fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix2dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix3dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix4dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix2x3fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix3x2fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix2x4fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix4x2fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix3x4fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix4x3fv (int program, int location, int count, byte transpose, float* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix2x3dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix3x2dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix2x4dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix4x2dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix3x4dv (int program, int location, int count, byte transpose, double* value);
		public unsafe delegate void GLAPIglProgramUniformMatrix4x3dv (int program, int location, int count, byte transpose, double* value);
		public delegate void GLAPIglValidateProgramPipeline (int pipeline);
		public unsafe delegate void GLAPIglGetProgramPipelineInfoLog (int pipeline, int bufSize, int* length, byte* infoLog);
		public delegate void GLAPIglVertexAttribL1d (int index, double x);
		public delegate void GLAPIglVertexAttribL2d (int index, double x, double y);
		public delegate void GLAPIglVertexAttribL3d (int index, double x, double y, double z);
		public delegate void GLAPIglVertexAttribL4d (int index, double x, double y, double z, double w);
		public unsafe delegate void GLAPIglVertexAttribL1dv (int index, double* v);
		public unsafe delegate void GLAPIglVertexAttribL2dv (int index, double* v);
		public unsafe delegate void GLAPIglVertexAttribL3dv (int index, double* v);
		public unsafe delegate void GLAPIglVertexAttribL4dv (int index, double* v);
		public unsafe delegate void GLAPIglVertexAttribLPointer (int index, int size, int type, int stride, void* pointer);
		public unsafe delegate void GLAPIglGetVertexAttribLdv (int index, int pname, double* _params);
		public unsafe delegate void GLAPIglViewportArrayv (int first, int count, float* v);
		public delegate void GLAPIglViewportIndexedf (int index, float x, float y, float w, float h);
		public unsafe delegate void GLAPIglViewportIndexedfv (int index, float* v);
		public unsafe delegate void GLAPIglScissorArrayv (int first, int count, int* v);
		public delegate void GLAPIglScissorIndexed (int index, int left, int bottom, int width, int height);
		public unsafe delegate void GLAPIglScissorIndexedv (int index, int* v);
		public unsafe delegate void GLAPIglDepthRangeArrayv (int first, int count, double* v);
		public delegate void GLAPIglDepthRangeIndexed (int index, double n, double f);
		public unsafe delegate void GLAPIglGetFloati_v (int target, int index, float* data);
		public unsafe delegate void GLAPIglGetDoublei_v (int target, int index, double* data);
		#endregion // GL4.1
		
		#region GL4.2
		public delegate void GLAPIglDrawArraysInstancedBaseInstance (int mode, int first, int count, int instancecount, int baseinstance);
		public unsafe delegate void GLAPIglDrawElementsInstancedBaseInstance (int mode, int count, int type, void* indices, int instancecount, int baseinstance);
		public unsafe delegate void GLAPIglDrawElementsInstancedBaseVertexBaseInstance (int mode, int count, int type, void* indices, int instancecount, int basevertex, int baseinstance);
		public unsafe delegate void GLAPIglGetInternalformativ (int target, int internalformat, int pname, int count, int* _params);
		public unsafe delegate void GLAPIglGetActiveAtomicCounterBufferiv (int program, int bufferIndex, int pname, int* _params);
		public delegate void GLAPIglBindImageTexture (int unit, int texture, int level, byte layered, int layer, int access, int format);
		public delegate void GLAPIglMemoryBarrier (int barriers);
		public delegate void GLAPIglTexStorage1D (int target, int levels, int internalformat, int width);
		public delegate void GLAPIglTexStorage2D (int target, int levels, int internalformat, int width, int height);
		public delegate void GLAPIglTexStorage3D (int target, int levels, int internalformat, int width, int height, int depth);
		public delegate void GLAPIglDrawTransformFeedbackInstanced (int mode, int id, int instancecount);
		public delegate void GLAPIglDrawTransformFeedbackStreamInstanced (int mode, int id, int stream, int instancecount);
		#endregion // GL4.2
		
		#region GL4.3
		public unsafe delegate void GLAPIglClearBufferData (int target, int internalformat, int format, int type, void* data);
		public unsafe delegate void GLAPIglClearBufferSubData (int target, int internalformat, IntPtr offset, IntPtr size, int format, int type, void* data);
		public delegate void GLAPIglDispatchCompute (int num_groups_x, int num_groups_y, int num_groups_z);
		public delegate void GLAPIglDispatchComputeIndirect (IntPtr indirect);
		public delegate void GLAPIglCopyImageSubData (int srcName, int srcTarget, int srcLevel, int srcX, int srcY, int srcZ, int dstName, int dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		public delegate void GLAPIglFramebufferParameteri (int target, int pname, int param);
		public unsafe delegate void GLAPIglGetFramebufferParameteriv (int target, int pname, int* _params);
		public unsafe delegate void GLAPIglGetInternalformati64v (int target, int internalformat, int pname, int count, long* _params);
		public delegate void GLAPIglInvalidateTexSubImage (int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
		public delegate void GLAPIglInvalidateTexImage (int texture, int level);
		public delegate void GLAPIglInvalidateBufferSubData (int buffer, IntPtr offset, IntPtr length);
		public delegate void GLAPIglInvalidateBufferData (int buffer);
		public unsafe delegate void GLAPIglInvalidateFramebuffer (int target, int numAttachments, int* attachments);
		public unsafe delegate void GLAPIglInvalidateSubFramebuffer (int target, int numAttachments, int* attachments, int x, int y, int width, int height);
		public unsafe delegate void GLAPIglMultiDrawArraysIndirect (int mode, void* indirect, int drawcount, int stride);
		public unsafe delegate void GLAPIglMultiDrawElementsIndirect (int mode, int type, void* indirect, int drawcount, int stride);
		public unsafe delegate void GLAPIglGetProgramInterfaceiv (int program, int programInterface, int pname, int* _params);
		public unsafe delegate int GLAPIglGetProgramResourceIndex (int program, int programInterface, byte* name);
		public unsafe delegate void GLAPIglGetProgramResourceName (int program, int programInterface, int index, int bufSize, int* length, byte* name);
		public unsafe delegate void GLAPIglGetProgramResourceiv (int program, int programInterface, int index, int propCount, int* props, int count, int* length, int* _params);
		public unsafe delegate int GLAPIglGetProgramResourceLocation (int program, int programInterface, byte* name);
		public unsafe delegate int GLAPIglGetProgramResourceLocationIndex (int program, int programInterface, byte* name);
		public delegate void GLAPIglShaderStorageBlockBinding (int program, int storageBlockIndex, int storageBlockBinding);
		public delegate void GLAPIglTexBufferRange (int target, int internalformat, int buffer, IntPtr offset, IntPtr size);
		public delegate void GLAPIglTexStorage2DMultisample (int target, int samples, int internalformat, int width, int height, byte fixedsamplelocations);
		public delegate void GLAPIglTexStorage3DMultisample (int target, int samples, int internalformat, int width, int height, int depth, byte fixedsamplelocations);
		public delegate void GLAPIglTextureView (int texture, int target, int origtexture, int internalformat, int minlevel, int numlevels, int minlayer, int numlayers);
		public delegate void GLAPIglBindVertexBuffer (int bindingindex, int buffer, IntPtr offset, int stride);
		public delegate void GLAPIglVertexAttribFormat (int attribindex, int size, int type, byte normalized, int relativeoffset);
		public delegate void GLAPIglVertexAttribIFormat (int attribindex, int size, int type, int relativeoffset);
		public delegate void GLAPIglVertexAttribLFormat (int attribindex, int size, int type, int relativeoffset);
		public delegate void GLAPIglVertexAttribBinding (int attribindex, int bindingindex);
		public delegate void GLAPIglVertexBindingDivisor (int bindingindex, int divisor);
		public unsafe delegate void GLAPIglDebugMessageControl (int source, int type, int severity, int count, int* ids, byte enabled);
		public unsafe delegate void GLAPIglDebugMessageInsert (int source, int type, int id, int severity, int length, byte* buf);
		public unsafe delegate void GLAPIglDebugMessageCallback (IntPtr callback, void* userParam);
		public unsafe delegate int GLAPIglGetDebugMessageLog (int count, int bufSize, int* sources, int* types, int* ids, int* severities, int* lengths, byte* messageLog);
		public unsafe delegate void GLAPIglPushDebugGroup (int source, int id, int length, byte* message);
		public delegate void GLAPIglPopDebugGroup ();
		public unsafe delegate void GLAPIglObjectLabel (int identifier, int name, int length, byte* label);
		public unsafe delegate void GLAPIglGetObjectLabel (int identifier, int name, int bufSize, int* length, byte* label);
		public unsafe delegate void GLAPIglObjectPtrLabel (void* ptr, int length, byte* label);
		public unsafe delegate void GLAPIglGetObjectPtrLabel (void* ptr, int bufSize, int* length, byte* label);
		#endregion // GL4.3
		
		#region GL4.4
		public unsafe delegate void GLAPIglBufferStorage (int target, IntPtr size, void* data, int flags);
		public unsafe delegate void GLAPIglClearTexImage (int texture, int level, int format, int type, void* data);
		public unsafe delegate void GLAPIglClearTexSubImage (int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, void* data);
		public unsafe delegate void GLAPIglBindBuffersBase (int target, int first, int count, int* buffers);
		public unsafe delegate void GLAPIglBindBuffersRange (int target, int first, int count, int* buffers, IntPtr* offsets, IntPtr* sizes);
		public unsafe delegate void GLAPIglBindTextures (int first, int count, int* textures);
		public unsafe delegate void GLAPIglBindSamplers (int first, int count, int* samplers);
		public unsafe delegate void GLAPIglBindImageTextures (int first, int count, int* textures);
		public unsafe delegate void GLAPIglBindVertexBuffers (int first, int count, int* buffers, IntPtr* offsets, int* strides);
		#endregion // GL4.4
		
		#region GL4.5
		public delegate void GLAPIglClipControl (int origin, int depth);
		public unsafe delegate void GLAPIglCreateTransformFeedbacks (int n, int* ids);
		public delegate void GLAPIglTransformFeedbackBufferBase (int xfb, int index, int buffer);
		public delegate void GLAPIglTransformFeedbackBufferRange (int xfb, int index, int buffer, IntPtr offset, IntPtr size);
		public unsafe delegate void GLAPIglGetTransformFeedbackiv (int xfb, int pname, int* param);
		public unsafe delegate void GLAPIglGetTransformFeedbacki_v (int xfb, int pname, int index, int* param);
		public unsafe delegate void GLAPIglGetTransformFeedbacki64_v (int xfb, int pname, int index, long* param);
		public unsafe delegate void GLAPIglCreateBuffers (int n, int* buffers);
		public unsafe delegate void GLAPIglNamedBufferStorage (int buffer, IntPtr size, void* data, int flags);
		public unsafe delegate void GLAPIglNamedBufferData (int buffer, IntPtr size, void* data, int usage);
		public unsafe delegate void GLAPIglNamedBufferSubData (int buffer, IntPtr offset, IntPtr size, void* data);
		public delegate void GLAPIglCopyNamedBufferSubData (int readBuffer, int writeBuffer, IntPtr readOffset, IntPtr writeOffset, IntPtr size);
		public unsafe delegate void GLAPIglClearNamedBufferData (int buffer, int internalformat, int format, int type, void* data);
		public unsafe delegate void GLAPIglClearNamedBufferSubData (int buffer, int internalformat, IntPtr offset, IntPtr size, int format, int type, void* data);
		public unsafe delegate void* GLAPIglMapNamedBuffer (int buffer, int access);
		public unsafe delegate void* GLAPIglMapNamedBufferRange (int buffer, IntPtr offset, IntPtr length, int access);
		public delegate byte GLAPIglUnmapNamedBuffer (int buffer);
		public delegate void GLAPIglFlushMappedNamedBufferRange (int buffer, IntPtr offset, IntPtr length);
		public unsafe delegate void GLAPIglGetNamedBufferParameteriv (int buffer, int pname, int* _params);
		public unsafe delegate void GLAPIglGetNamedBufferParameteri64v (int buffer, int pname, long* _params);
		public unsafe delegate void GLAPIglGetNamedBufferPointerv (int buffer, int pname, void** _params);
		public unsafe delegate void GLAPIglGetNamedBufferSubData (int buffer, IntPtr offset, IntPtr size, void* data);
		public unsafe delegate void GLAPIglCreateFramebuffers (int n, int* framebuffers);
		public delegate void GLAPIglNamedFramebufferRenderbuffer (int framebuffer, int attachment, int renderbuffertarget, int renderbuffer);
		public delegate void GLAPIglNamedFramebufferParameteri (int framebuffer, int pname, int param);
		public delegate void GLAPIglNamedFramebufferTexture (int framebuffer, int attachment, int texture, int level);
		public delegate void GLAPIglNamedFramebufferTextureLayer (int framebuffer, int attachment, int texture, int level, int layer);
		public delegate void GLAPIglNamedFramebufferDrawBuffer (int framebuffer, int buf);
		public unsafe delegate void GLAPIglNamedFramebufferDrawBuffers (int framebuffer, int n, int* bufs);
		public delegate void GLAPIglNamedFramebufferReadBuffer (int framebuffer, int src);
		public unsafe delegate void GLAPIglInvalidateNamedFramebufferData (int framebuffer, int numAttachments, int* attachments);
		public unsafe delegate void GLAPIglInvalidateNamedFramebufferSubData (int framebuffer, int numAttachments, int* attachments, int x, int y, int width, int height);
		public unsafe delegate void GLAPIglClearNamedFramebufferiv (int framebuffer, int buffer, int drawbuffer, int* value);
		public unsafe delegate void GLAPIglClearNamedFramebufferuiv (int framebuffer, int buffer, int drawbuffer, int* value);
		public unsafe delegate void GLAPIglClearNamedFramebufferfv (int framebuffer, int buffer, int drawbuffer, float* value);
		public delegate void GLAPIglClearNamedFramebufferfi (int framebuffer, int buffer, int drawbuffer, float depth, int stencil);
		public delegate void GLAPIglBlitNamedFramebuffer (int readFramebuffer, int drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
		public delegate int GLAPIglCheckNamedFramebufferStatus (int framebuffer, int target);
		public unsafe delegate void GLAPIglGetNamedFramebufferParameteriv (int framebuffer, int pname, int* param);
		public unsafe delegate void GLAPIglGetNamedFramebufferAttachmentParameteriv (int framebuffer, int attachment, int pname, int* _params);
		public unsafe delegate void GLAPIglCreateRenderbuffers (int n, int* renderbuffers);
		public delegate void GLAPIglNamedRenderbufferStorage (int renderbuffer, int internalformat, int width, int height);
		public delegate void GLAPIglNamedRenderbufferStorageMultisample (int renderbuffer, int samples, int internalformat, int width, int height);
		public unsafe delegate void GLAPIglGetNamedRenderbufferParameteriv (int renderbuffer, int pname, int* _params);
		public unsafe delegate void GLAPIglCreateTextures (int target, int n, int* textures);
		public delegate void GLAPIglTextureBuffer (int texture, int internalformat, int buffer);
		public delegate void GLAPIglTextureBufferRange (int texture, int internalformat, int buffer, IntPtr offset, IntPtr size);
		public delegate void GLAPIglTextureStorage1D (int texture, int levels, int internalformat, int width);
		public delegate void GLAPIglTextureStorage2D (int texture, int levels, int internalformat, int width, int height);
		public delegate void GLAPIglTextureStorage3D (int texture, int levels, int internalformat, int width, int height, int depth);
		public delegate void GLAPIglTextureStorage2DMultisample (int texture, int samples, int internalformat, int width, int height, byte fixedsamplelocations);
		public delegate void GLAPIglTextureStorage3DMultisample (int texture, int samples, int internalformat, int width, int height, int depth, byte fixedsamplelocations);
		public unsafe delegate void GLAPIglTextureSubImage1D (int texture, int level, int xoffset, int width, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglTextureSubImage2D (int texture, int level, int xoffset, int yoffset, int width, int height, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglTextureSubImage3D (int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, void* pixels);
		public unsafe delegate void GLAPIglCompressedTextureSubImage1D (int texture, int level, int xoffset, int width, int format, int imageSize, void* data);
		public unsafe delegate void GLAPIglCompressedTextureSubImage2D (int texture, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, void* data);
		public unsafe delegate void GLAPIglCompressedTextureSubImage3D (int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, void* data);
		public delegate void GLAPIglCopyTextureSubImage1D (int texture, int level, int xoffset, int x, int y, int width);
		public delegate void GLAPIglCopyTextureSubImage2D (int texture, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		public delegate void GLAPIglCopyTextureSubImage3D (int texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		public delegate void GLAPIglTextureParameterf (int texture, int pname, float param);
		public unsafe delegate void GLAPIglTextureParameterfv (int texture, int pname, float* param);
		public delegate void GLAPIglTextureParameteri (int texture, int pname, int param);
		public unsafe delegate void GLAPIglTextureParameterIiv (int texture, int pname, int* _params);
		public unsafe delegate void GLAPIglTextureParameterIuiv (int texture, int pname, int* _params);
		public unsafe delegate void GLAPIglTextureParameteriv (int texture, int pname, int* param);
		public delegate void GLAPIglGenerateTextureMipmap (int texture);
		public delegate void GLAPIglBindTextureUnit (int unit, int texture);
		public unsafe delegate void GLAPIglGetTextureImage (int texture, int level, int format, int type, int bufSize, void* pixels);
		public unsafe delegate void GLAPIglGetCompressedTextureImage (int texture, int level, int bufSize, void* pixels);
		public unsafe delegate void GLAPIglGetTextureLevelParameterfv (int texture, int level, int pname, float* _params);
		public unsafe delegate void GLAPIglGetTextureLevelParameteriv (int texture, int level, int pname, int* _params);
		public unsafe delegate void GLAPIglGetTextureParameterfv (int texture, int pname, float* _params);
		public unsafe delegate void GLAPIglGetTextureParameterIiv (int texture, int pname, int* _params);
		public unsafe delegate void GLAPIglGetTextureParameterIuiv (int texture, int pname, int* _params);
		public unsafe delegate void GLAPIglGetTextureParameteriv (int texture, int pname, int* _params);
		public unsafe delegate void GLAPIglCreateVertexArrays (int n, int* arrays);
		public delegate void GLAPIglDisableVertexArrayAttrib (int vaobj, int index);
		public delegate void GLAPIglEnableVertexArrayAttrib (int vaobj, int index);
		public delegate void GLAPIglVertexArrayElementBuffer (int vaobj, int buffer);
		public delegate void GLAPIglVertexArrayVertexBuffer (int vaobj, int bindingindex, int buffer, IntPtr offset, int stride);
		public unsafe delegate void GLAPIglVertexArrayVertexBuffers (int vaobj, int first, int count, int* buffers, IntPtr* offsets, int* strides);
		public delegate void GLAPIglVertexArrayAttribBinding (int vaobj, int attribindex, int bindingindex);
		public delegate void GLAPIglVertexArrayAttribFormat (int vaobj, int attribindex, int size, int type, byte normalized, int relativeoffset);
		public delegate void GLAPIglVertexArrayAttribIFormat (int vaobj, int attribindex, int size, int type, int relativeoffset);
		public delegate void GLAPIglVertexArrayAttribLFormat (int vaobj, int attribindex, int size, int type, int relativeoffset);
		public delegate void GLAPIglVertexArrayBindingDivisor (int vaobj, int bindingindex, int divisor);
		public unsafe delegate void GLAPIglGetVertexArrayiv (int vaobj, int pname, int* param);
		public unsafe delegate void GLAPIglGetVertexArrayIndexediv (int vaobj, int index, int pname, int* param);
		public unsafe delegate void GLAPIglGetVertexArrayIndexed64iv (int vaobj, int index, int pname, long* param);
		public unsafe delegate void GLAPIglCreateSamplers (int n, int* samplers);
		public unsafe delegate void GLAPIglCreateProgramPipelines (int n, int* pipelines);
		public unsafe delegate void GLAPIglCreateQueries (int target, int n, int* ids);
		public delegate void GLAPIglGetQueryBufferObjecti64v (int id, int buffer, int pname, IntPtr offset);
		public delegate void GLAPIglGetQueryBufferObjectiv (int id, int buffer, int pname, IntPtr offset);
		public delegate void GLAPIglGetQueryBufferObjectui64v (int id, int buffer, int pname, IntPtr offset);
		public delegate void GLAPIglGetQueryBufferObjectuiv (int id, int buffer, int pname, IntPtr offset);
		public delegate void GLAPIglMemoryBarrierByRegion (int barriers);
		public unsafe delegate void GLAPIglGetTextureSubImage (int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, int bufSize, void* pixels);
		public unsafe delegate void GLAPIglGetCompressedTextureSubImage (int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, void* pixels);
		public delegate int GLAPIglGetGraphicsResetStatus ();
		public unsafe delegate void GLAPIglGetnCompressedTexImage (int target, int lod, int bufSize, void* pixels);
		public unsafe delegate void GLAPIglGetnTexImage (int target, int level, int format, int type, int bufSize, void* pixels);
		public unsafe delegate void GLAPIglGetnUniformdv (int program, int location, int bufSize, double* _params);
		public unsafe delegate void GLAPIglGetnUniformfv (int program, int location, int bufSize, float* _params);
		public unsafe delegate void GLAPIglGetnUniformiv (int program, int location, int bufSize, int* _params);
		public unsafe delegate void GLAPIglGetnUniformuiv (int program, int location, int bufSize, int* _params);
		public unsafe delegate void GLAPIglReadnPixels (int x, int y, int width, int height, int format, int type, int bufSize, void* data);
		public unsafe delegate void GLAPIglGetnMapdv (int target, int query, int bufSize, double* v);
		public unsafe delegate void GLAPIglGetnMapfv (int target, int query, int bufSize, float* v);
		public unsafe delegate void GLAPIglGetnMapiv (int target, int query, int bufSize, int* v);
		public unsafe delegate void GLAPIglGetnPixelMapfv (int map, int bufSize, float* values);
		public unsafe delegate void GLAPIglGetnPixelMapuiv (int map, int bufSize, int* values);
		public unsafe delegate void GLAPIglGetnPixelMapusv (int map, int bufSize, ushort* values);
		public unsafe delegate void GLAPIglGetnPolygonStipple (int bufSize, byte* pattern);
		public unsafe delegate void GLAPIglGetnColorTable (int target, int format, int type, int bufSize, void* table);
		public unsafe delegate void GLAPIglGetnConvolutionFilter (int target, int format, int type, int bufSize, void* image);
		public unsafe delegate void GLAPIglGetnSeparableFilter (int target, int format, int type, int rowBufSize, void* row, int columnBufSize, void* column, void* span);
		public unsafe delegate void GLAPIglGetnHistogram (int target, byte reset, int format, int type, int bufSize, void* values);
		public unsafe delegate void GLAPIglGetnMinmax (int target, byte reset, int format, int type, int bufSize, void* values);
		public delegate void GLAPIglTextureBarrier ();
		#endregion // GL4.5
		
		#region GL4.6
		public unsafe delegate void GLAPIglSpecializeShader (int shader, byte* pEntryPoint, int numSpecializationConstants, int* pConstantIndex, int* pConstantValue);
		public unsafe delegate void GLAPIglMultiDrawArraysIndirectCount (int mode, void* indirect, IntPtr drawcount, int maxdrawcount, int stride);
		public unsafe delegate void GLAPIglMultiDrawElementsIndirectCount (int mode, int type, void* indirect, IntPtr drawcount, int maxdrawcount, int stride);
		public delegate void GLAPIglPolygonOffsetClamp (float factor, float units, float clamp);
		#endregion // GL4.6
		
	}
}
